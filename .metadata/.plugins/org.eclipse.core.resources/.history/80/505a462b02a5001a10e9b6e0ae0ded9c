package com.capgemini.lastMile.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.capgemini.lastMile.entity.RequestResponse;
import com.capgemini.lastMile.service.RequestResponseService;
 

@SuppressWarnings("unused")
@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class RequestResponseRestController {
	
	@Autowired
	 private RequestResponseService requestresponseservice;
	  
	 public void setRequestResponseService(RequestResponseService requestresponseservice) {
	  this.requestresponseservice = requestresponseservice;
	 }
	 
	 @GetMapping("/api/requestresponses/all")
	 public List<RequestResponse> getRequestResponse() {
	  List<RequestResponse> requestresponses = requestresponseservice.retrieveRequestResponses();
	  return requestresponses;
	 }
	  
	 @GetMapping("/api/requestresponses/{message_id}")
	 public RequestResponse getRequestResponse(@PathVariable(name="message_id")Long message_id) {
	  return requestresponseservice.getRequestResponse(message_id);
	 }
	  
	 @PostMapping("/api/requestresponses")
	 public RequestResponse saveRequestResponse(@Valid @RequestBody RequestResponse requestresponse){
	  requestresponseservice.saveRequestResponse(requestresponse);
	  return requestresponse;
	  //System.out.println("Request Saved Successfully");
	 }
	  
	 @DeleteMapping("/api/requestresponses/{message_id}")
	 public void deleteRequestResponse(@PathVariable(name="message_id")Long message_id){
	  requestresponseservice.deleteRequestResponse(message_id);
	  System.out.println("Request Deleted Successfully");
	 }
	  
	 @PutMapping("/api/requestresponses/{message_id}")
	 public void updateTicket(@RequestBody RequestResponse requestresponse,
	   @PathVariable(name="message_id")Long message_id){
	  RequestResponse req = requestresponseservice.getRequestResponse(message_id);
	  if(req != null){
	   requestresponseservice.updateRequestResponse(requestresponse);
	  }
	   
	 }


}
