package com.capgemini.capgeminiCafe;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;

import com.capgemini.lastMile.entity.Reviews;
import com.capgemini.lastMile.entity.CafeDetails;
import com.capgemini.lastMile.entity.CafeMenu;


@RunWith(SpringRunner.class)
@SpringBootTest(classes = LastMileApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class ReviewTest {

        @Autowired
        private TestRestTemplate restTemplate;
        @LocalServerPort
        private int port;

        private String getRootUrl() {
                return "http://localhost:" + port;
        }

        @Test
        public void contextLoads() {
        }

        @Test
        public void testGetAllReviews() {
                HttpHeaders headers = new HttpHeaders();
                HttpEntity<String> entity = new HttpEntity<String>(null, headers);
                ResponseEntity<String> response = restTemplate.exchange(getRootUrl() + "/api/reviews/all", HttpMethod.GET, entity,
                                String.class);
                Assert.assertNotNull(response.getBody());
        }

        @Test
        public void testGetReviewsById() {
                Reviews reviews = restTemplate.getForObject(getRootUrl() + "/api/reviews/1", Reviews.class);
                Assert.assertNotNull(reviews);
        }
       
        @Test
        public void testAddReview() {
                Reviews reviews = new Reviews();
                reviews.setDate("25/05/2020");
                reviews.setRating(5);
                reviews.setReview("Good");
                reviews.setTypes("Drink");
                CafeDetails cafedetails = restTemplate.getForObject(getRootUrl() + "/api/cafedetails/1", CafeDetails.class);
                cafedetails.setCafe_id(cafedetails.getCafe_id());          
                reviews.setCafe_location("Airoli");
                CafeMenu cafemenu = restTemplate.getForObject(getRootUrl() + "/api/detailandmenus/1", CafeMenu.class);
                cafemenu.setItem_id(cafemenu.getItem_id());
                reviews.setItem_name("orange juice");
                reviews.setUser_id(12);
                ResponseEntity<Reviews> postResponse = restTemplate.postForEntity(getRootUrl() + "/api/reviews", reviews, Reviews.class);
                Assert.assertNotNull(postResponse);
                Assert.assertNotNull(postResponse.getBody());
        }

        @Test
        public void testUpdateReviews() {
                int rating_id= 1;
                restTemplate.put(getRootUrl() + "/api/reviews/" + rating_id, new Double(100));
                Reviews updatedReviews = restTemplate.getForObject(getRootUrl() + "/api/reviews/" + rating_id, Reviews.class);
                Assert.assertNotNull(updatedReviews);
        }
}