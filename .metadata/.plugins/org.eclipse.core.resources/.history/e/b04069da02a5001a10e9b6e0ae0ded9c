package com.capgemini.capgeminiCafe.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


import com.capgemini.lastMile.entity.Ticket;
import com.capgemini.lastMile.service.TicketService;
 

@SuppressWarnings("unused")
@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class TicketRestController {
	
	@Autowired
	 private TicketService ticketService;
	  
	 public void setTicketService(TicketService ticketService) {
	  this.ticketService = ticketService;
	 }
	 
	 @GetMapping("/api/tickets/all")
	 public List<Ticket> gettickets() {
	  List<Ticket> tickets = ticketService.retrieveTickets();
	  return tickets;
	 }
	  
	 @GetMapping("/api/tickets/{ticket_number}")
	 public Ticket getTicket(@PathVariable(name="ticket_number")Long ticket_number) {
	  return ticketService.getTicket(ticket_number);
	 }
	  
	 @PostMapping("/api/tickets")
	 public Ticket saveTicket(@Valid @RequestBody Ticket ticket){
	  ticketService.saveTicket(ticket);
	  return ticket;
	  //System.out.println("Ticket Saved Successfully");
	 }
	  
	 @DeleteMapping("/api/tickets/{ticket_number}")
	 public void deleteAdmin(@PathVariable(name="ticket_number")Long ticket_number){
	  ticketService.deleteTicket(ticket_number);
	  System.out.println("Ticket Deleted Successfully");
	 }
	  
	 @PutMapping("/api/tickets/{ticket_number}")
	 public void updateTicket(@RequestBody Ticket ticket,
	   @PathVariable(name="ticket_number")Long ticket_number){
	  Ticket tic = ticketService.getTicket(ticket_number);
	  if(tic != null){
	   ticketService.updateTicket(ticket);
	  }
	   
	 }

}
