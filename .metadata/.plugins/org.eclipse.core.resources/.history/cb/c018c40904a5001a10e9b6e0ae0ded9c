package com.capgemini.capgeminiCafe.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


import com.capgemini.capgeminiCafe.beans.CafeMenu;
import com.capgemini.capgeminiCafe.service.CafeMenuService;
 

@SuppressWarnings("unused")
@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class CafeMenuRestController {
	
	@Autowired
	 private CafeMenuService cafeMenuService;
	  
	 public void setCafeMenuService(CafeMenuService cafeMenuService) {
	  this.cafeMenuService = cafeMenuService;
	 }
	 
	 @GetMapping("/api/cafeMenus/all")
	 public List<CafeMenu> getCafeMenus() {
	  List<CafeMenu> cafeMenus = cafeMenuService.retrieveCafeMenus();
	  return cafeMenus;
	 }
	  
	 @GetMapping("/api/cafeMenus/{item_id}")
	 public CafeMenu getCafeMenu(@PathVariable(name="item_id")Long item_id) {
	  return cafeMenuService.getCafeMenu(item_id);
	 }
	  
	 @PostMapping("/api/cafeMenus")
	 public CafeMenu saveCafeMenu(@Valid @RequestBody CafeMenu cafeMenu){
		 cafeMenuService.saveCafeMenu(cafeMenu);
	  return cafeMenu;
	  //System.out.println("CafeMenu Saved Successfully");
	 }
	  
	 @DeleteMapping("/api/cafeMenus/{item_id}")
	 public void deleteAdmin(@PathVariable(name="item_id")Long item_id){
		 cafeMenuService.deleteCafeMenu(item_id);
	  System.out.println("CafeMenu Deleted Successfully");
	 }
	  
	 @PutMapping("/api/cafeMenus/{item_id}")
	 public void updateCafeMenu(@RequestBody CafeMenu cafeMenu,
	   @PathVariable(name="item_id")Long item_id){
	  CafeMenu caf = cafeMenuService.getCafeMenu(item_id);
	  if(caf != null){
		  cafeMenuService.updateCafeMenu(cafeMenu);
	  }
	   
	 }

}
